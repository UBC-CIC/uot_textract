#
# lambda.sh
# For Linux Environment 

# Clean up before starting
rm -rf env/
rm -rf package/
rm function.zip

# Build poppler
rm -rf poppler_binaries/
./build_poppler.sh

# Make a virtualenv
python3.8 -m venv env/
source env/bin/activate

# Creating the package
mkdir -p package
pip3.8 install pdf2image --target package/
pip3.8 install pypdf4 --target package/

# Moving the poppler libraries in the package
cp -r poppler_binaries/ package/

# Moving the function in the package 
cp index.py package/

# Zipping the package
cd package
zip -r9 ../function.zip *
cd ..

# Deleting package artifacts
rm -rf package/

# Cleaning AWS function
# aws lambda delete-function --function-name pdf2image-demo-function --region us-east-1

# Cleaning AWS role
# aws iam detach-role-policy --policy-arn arn:aws:iam::aws:policy/AWSLambdaFullAccess --role-name pdf2image-demo-role
# aws iam delete-role --role-name pdf2image-demo-role

# Creating AWS role
# aws iam create-role --role-name pdf2image-demo-role --assume-role-policy-document file://amazon/role-policy.json
# aws iam attach-role-policy --policy-arn arn:aws:iam::aws:policy/AWSLambdaFullAccess --role-name pdf2image-demo-role

# sleep 5

# Creating AWS function
# For reference, see: https://docs.aws.amazon.com/cli/latest/reference/lambda/create-function.html
# aws lambda create-function --function-name pdf2image-demo-function \
#                            --runtime python3.6 \
#                           --memory 128 \
#                           --handler pdf2image_demo.convert \
#                           --description "Convert a PDF file to multiple images" \
#                           --timeout 30 \
#                           --region us-east-1 \
#                           --role arn:aws:iam::$ACCT_ID:role/pdf2image-demo-role \
#                           --publish \
#                           --zip-file fileb://function.zip

# Test it
# aws lambda invoke --function-name pdf2image-demo-function \
 #                 --region us-east-1 \
 #                 --log-type Tail \
 #                 --payload '{"pdf_file": ""}' \
 #                 output.json
